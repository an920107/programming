try:
	from type import *
	print(((1 + 2 + 3 if type(1) == type(2) == type(3) == int else error_()) if ((1 < 2 if type(1) == type(2) == int else error_()) if type((1 < 2 if type(1) == type(2) == int else error_())) == bool else error_()) else (1 * 2 * 3 * 4 * 5 if type(1) == type(2) == type(3) == type(4) == type(5) == int else error_())) if type(((1 + 2 + 3 if type(1) == type(2) == type(3) == int else error_()) if ((1 < 2 if type(1) == type(2) == int else error_()) if type((1 < 2 if type(1) == type(2) == int else error_())) == bool else error_()) else (1 * 2 * 3 * 4 * 5 if type(1) == type(2) == type(3) == type(4) == type(5) == int else error_()))) == int else error_())
	print((0 if ((9 == (2 * 5 if type(2) == type(5) == int else error_()) if type(9) == type((2 * 5 if type(2) == type(5) == int else error_())) else error_()) if type((9 == (2 * 5 if type(2) == type(5) == int else error_()) if type(9) == type((2 * 5 if type(2) == type(5) == int else error_())) else error_())) == bool else error_()) else (1 if (True if type(True) == bool else error_()) else 2)) if type((0 if ((9 == (2 * 5 if type(2) == type(5) == int else error_()) if type(9) == type((2 * 5 if type(2) == type(5) == int else error_())) else error_()) if type((9 == (2 * 5 if type(2) == type(5) == int else error_()) if type(9) == type((2 * 5 if type(2) == type(5) == int else error_())) else error_())) == bool else error_()) else (1 if (True if type(True) == bool else error_()) else 2))) == int else error_())
except Exception as e: print(e)
